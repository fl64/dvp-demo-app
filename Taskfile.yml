# https://taskfile.dev

version: "3"

dotenv:
- .env

vars:
  TMP_PATH: ./tmp
  SSH_KEYS_NAME: demo
  SSH_KEYS_PATH: "{{ .TMP_PATH }}"
  SSH_PRIV_KEY_FILE: "{{ .SSH_KEYS_PATH }}/{{.SSH_KEYS_NAME}}"
  SSH_PUB_KEY_FILE: "{{ .SSH_PRIV_KEY_FILE }}.pub"
  PASSWORD_HASH:
    sh: |
          echo "${PASSWORD}" | htpasswd -BinC 10 "" | cut -d: -f2 | base64 -w0

tasks:
  init:
    cmds:
      - mkdir -p {{ .TMP_PATH  }}
      - mkdir -p {{ .SSH_KEYS_PATH  }}
  ssh-gen:
    deps:
      - init
    cmds:
      - echo "ðŸš€ Generate ssh keys {{ .SSH_PRIV_KEY_FILE }}"
      - yes | ssh-keygen -t rsa -b 1024 -f "{{ .SSH_PRIV_KEY_FILE }}" -N "" -C "{{ .SSH_KEYS_NAME }}" -v
    status:
      - test -f "{{ .SSH_PRIV_KEY_FILE }}"
  update-ssh:
    vars:
      SSH_PUB_KEY:
        sh: cat "{{ .SSH_PUB_KEY_FILE }}"
    deps:
      - ssh-gen
    cmds:
      - echo "ðŸš€ Update ssh keys"
      - grep -rwl "{{ .SSH_KEYS_NAME }}" | xargs sed -i 's|ssh-rsa [^ ]* {{ .SSH_KEYS_NAME }}|{{ .SSH_PUB_KEY }}|g'
  update-password:
    cmds:
    - echo "New password ${PASSWORD}"
    - find . -name "*.yaml" -exec yq eval --inplace 'with(select(.kind == "User"); .spec.password="{{.PASSWORD_HASH}}")' '{}' \;
  update-sc:
    cmds:
      - |
          find . -name "*.yaml" -exec yq eval --inplace 'with(select(.kind == "VirtualDisk"); .spec.persistentVolumeClaim.storageClassName="'${STORAGE_CLASS}'")' '{}' \;
  update-fqdn:
    cmds:
      - |
          yq -i '(.spec.rules[]?.host |= env(FQDN)) | (.spec.tls[].hosts[] |= env(FQDN))' ./demo-app/ingress.yaml
          yq -i '(.spec.dnsNames[]? |= env(FQDN))' ./demo-app/cert.yaml
          yq -i '(.spec.applicationDomain |= env(FQDN))' ./demo-app/dex.yaml
  update:
    deps:
      - update-ssh
      - update-password
      - update-sc
      - update-fqdn
  deploy:
    vars:
      start_time:
        sh: date +%s
    cmds:
      - task: update
      - kubectl apply -k .
      - kubectl -n demo-db get vm -o name | xargs kubectl -n demo-db wait --for='jsonpath={.status.phase}=Running' --timeout=360s
      - kubectl -n demo-app get vm -o name | xargs kubectl -n demo-app wait --for='jsonpath={.status.phase}=Running' --timeout=360s
      - |
        export end_time=$(date +%s)
        difference=$((end_time - {{.start_time}}))
        date -ud "@$difference" +'%H:%M:%S'
  undeploy:
    cmds:
      - kubectl delete -k . || true
